# Generated by Django 4.2.2 on 2023-06-28 11:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArhangelskayaOblast',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('region', models.CharField(blank=True, null=True)),
                ('id_full', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, null=True)),
                ('name', models.CharField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'arhangelskaya_oblast',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoFootGraphArhObl',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('objectid', models.IntegerField(blank=True, null=True)),
                ('fclass', models.CharField(blank=True, null=True)),
                ('name', models.CharField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, null=True)),
                ('oneway', models.CharField(blank=True, null=True)),
                ('maxspeed', models.IntegerField(blank=True, null=True)),
                ('layer', models.FloatField(blank=True, null=True)),
                ('bridge', models.CharField(blank=True, null=True)),
                ('tunnel', models.CharField(blank=True, null=True)),
                ('auto', models.CharField(blank=True, null=True)),
                ('foot', models.CharField(blank=True, null=True)),
                ('meters', models.FloatField(blank=True, null=True)),
                ('minutes', models.FloatField(blank=True, null=True)),
                ('minutes_foot', models.FloatField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auto_foot_graph_arh_obl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseOblPeople',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('type', models.CharField(blank=True, null=True)),
                ('gicity', models.CharField(blank=True, null=True)),
                ('okrug', models.CharField(blank=True, null=True)),
                ('district', models.CharField(blank=True, null=True)),
                ('okato', models.CharField(blank=True, null=True)),
                ('oktmo', models.CharField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_obl_people',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseOblPeople3000',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('type', models.CharField(blank=True, null=True)),
                ('gicity', models.CharField(blank=True, null=True)),
                ('okrug', models.CharField(blank=True, null=True)),
                ('district', models.CharField(blank=True, null=True)),
                ('people', models.IntegerField(blank=True, null=True)),
                ('okato', models.CharField(blank=True, null=True)),
                ('oktmo', models.CharField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_obl_people_3000',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Buildings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'buildings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MunObrAllBad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('type', models.CharField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('sub', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, null=True)),
                ('people', models.IntegerField(blank=True, null=True)),
                ('sum_bad', models.FloatField(blank=True, null=True)),
                ('percent', models.FloatField(blank=True, null=True)),
                ('road_density', models.FloatField(blank=True, null=True)),
                ('road_demand', models.IntegerField(blank=True, null=True)),
                ('id_full', models.IntegerField(blank=True, null=True)),
                ('count_bad', models.IntegerField(blank=True, null=True)),
                ('avg_free_speed_to_limit', models.FloatField(blank=True, null=True)),
                ('sum_all', models.FloatField(blank=True, null=True)),
                ('sum_all_signal', models.FloatField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mun_obr_all_bad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MunObrArctic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('type', models.CharField(blank=True, null=True)),
                ('level_field', models.IntegerField(blank=True, db_column='level_', null=True)),
                ('sub', models.IntegerField(blank=True, null=True)),
                ('id_full', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, null=True)),
                ('district', models.CharField(blank=True, null=True)),
                ('okrug', models.CharField(blank=True, null=True)),
                ('people', models.IntegerField(blank=True, null=True)),
                ('oktmo', models.CharField(blank=True, null=True)),
                ('okato', models.CharField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mun_obr_arctic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectsEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('city', models.CharField(blank=True, null=True)),
                ('street', models.CharField(blank=True, null=True)),
                ('house', models.CharField(blank=True, null=True)),
                ('post', models.CharField(blank=True, null=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'objects_education',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectsTourism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('city', models.CharField(blank=True, null=True)),
                ('street', models.CharField(blank=True, null=True)),
                ('house', models.CharField(blank=True, null=True)),
                ('post', models.CharField(blank=True, null=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'objects_tourism',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectsZdrav',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, null=True)),
                ('city', models.CharField(blank=True, null=True)),
                ('street', models.CharField(blank=True, null=True)),
                ('house', models.CharField(blank=True, null=True)),
                ('post', models.CharField(blank=True, null=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('cpi_id', models.IntegerField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'objects_zdrav',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SlowRoadsLines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(blank=True, null=True)),
                ('category_name', models.CharField(blank=True, null=True)),
                ('dates', models.CharField(blank=True, null=True)),
                ('free_speed_to_limit', models.FloatField(blank=True, null=True)),
                ('length', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, null=True)),
                ('geom_length', models.FloatField(blank=True, null=True)),
                ('wkb_geometry', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'slow_roads_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpatialRefSys',
            fields=[
                ('srid', models.IntegerField(primary_key=True, serialize=False)),
                ('auth_name', models.CharField(blank=True, max_length=256, null=True)),
                ('auth_srid', models.IntegerField(blank=True, null=True)),
                ('srtext', models.CharField(blank=True, max_length=2048, null=True)),
                ('proj4text', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'spatial_ref_sys',
                'managed': False,
            },
        ),
    ]
